(define-module QF_UF
 (
  (set-info :smt-lib-version 3.0)
  (set-info :smt-lib-release "2020-XX-XX")
  (set-info :written-by "Pascal Fontaine and Cesare Tinelli")
  (set-info :date "2020-07-01")
  (set-info :last-updated "2020-07-01")
  (set-info :update-history
   "TODO.
   "
  )
  (set-info :notes
   "Closed quantifier-free and choice-free formulas built 
    over an arbitrary expansion of the Core signature 
    with free types of order at most 1 and free constants 
    of type-order at most 1.")

  (import (Core))
  (open Core)
 )
 :types (Bool)

 :consts (
    (true Bool)
    (false Bool)
    (ite (-> (! Type :var A :implicit) Bool A A A))
    (not (-> Bool Bool))
    (= (-> (! Type :var A :implicit) A A Bool))
    (distinct (-> (! Type :var A :implicit) A A Bool))
    (and (-> Bool Bool Bool))
    (or (-> Bool Bool Bool))
    (=> (-> Bool Bool Bool))
    (xor (-> Bool Bool Bool))
    ; no quantifiers
  )

 :FOL
)

